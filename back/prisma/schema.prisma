// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Certification {
  email String @unique
  code  String @unique
}

model User {
  id       Int     @id @default(autoincrement())
  nickname String  @unique
  blocking Boolean @default(false)

  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  diary     Diary[]
  chat      ChattingRoom[]
  Account   Account?
}

model Account {
  email             String  @unique
  userID            String  @unique
  password          String
  certified_account Boolean @default(false)
  User              User    @relation(fields: [id], references: [id])
  id                Int     @unique
}

// enum Emotion {
//   confidence
//   excitement
//   thanks
//   comfort
//   worry
//   sad
//   hurt
//   angry
// }

// enum Weather {
//   sunny
//   rainy
//   cloudy
//   snowy
//   cloudAndSun
// }

model Diary {
  id          Int      @id @unique @default(autoincrement())
  emotion     String   @default("thanks")
  title       String
  description String
  lock        Boolean  @default(false)
  likes       Int      @default(0)
  weather     String   @default("sunny")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  author String
  user   User   @relation(fields: [author], references: [nickname])
}

model Token {
  id     Int    @id @unique @default(autoincrement())
  token  String @unique
  userID String @unique
}

model ChattingRoom {
  id        Int       @id @default(autoincrement())
  users     User[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Messege[]
}

model Messege {
  id          Int      @id @default(autoincrement())
  transmitter String
  receiver    String
  message     String
  read        Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  roomID      Int

  chattingRoom ChattingRoom @relation(fields: [roomID], references: [id])
}
